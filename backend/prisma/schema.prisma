// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserRole {
  id   Int    @id @default(autoincrement())
  name String @unique
  User User[]

  @@map("user_roles")
}

model ProductType {
  id   Int    @id @default(autoincrement())
  name String @unique
  products Product[]

  @@map("product_types")
}

model ImageType {
  id   Int    @id @default(autoincrement())
  name String @unique
  images Image[]

  @@map("image_types")
}

model User {
  id          String   @id @default(uuid())
  name        String
  company     String?
  phonenumber String   @unique
  email       String   @unique  
  password    String   @unique
  products    Product[]
  roleId      Int      @map("role_id")
  role        UserRole @relation(fields: [roleId], references: [id])
  createdAt   DateTime @default(now()) @map("created_at")

  @@map("users")
}

model Product {
  id          String   @id @default(uuid())
  name        String
  typeId      Int      @map("types_id")
  type        ProductType @relation(fields: [typeId], references: [id])
  sellerId    String   @map("seller_id")
  seller      User     @relation(fields: [sellerId], references: [id])
  description String
  variations  ProductVariation[]
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("products")
}

model ProductVariation {
  id        String   @id @default(uuid())
  productId String   @map("product_id")
  product   Product  @relation(fields: [productId], references: [id])
  color     String
  mrp       Float?
  stock     Int      @default(0)
  images    ProductImage[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("product_variations")
}

model ProductImage {
  id          String             @id @default(uuid())
  variationId String             @map("variation_id")
  variation   ProductVariation   @relation(fields: [variationId], references: [id])
  images      Image[]
  createdAt   DateTime           @default(now()) @map("created_at")
  updatedAt   DateTime           @updatedAt @map("updated_at")

  @@map("product_images")
}

model Image {
  id            String      @id @default(uuid())
  url           String      @map("url")
  publicId      String      @map("public_id")
  imageTypeId   Int         @map("image_type_id")
  imageType     ImageType   @relation(fields: [imageTypeId], references: [id])
  productImageId String     @map("product_image_id")
  productImage  ProductImage @relation(fields: [productImageId], references: [id])
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt @map("updated_at")

  @@map("images")
}

model Contact {
  id          Int      @id @default(autoincrement())
  name        String
  phonenumber String
  subject     String
  message     String?
  state       String
  city        String
  company     String
  gstPan      String?  @map("gst_pan")
  createdAt   DateTime @default(now()) @map("created_at")

  @@map("contacts")
}
